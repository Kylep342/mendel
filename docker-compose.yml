services:
  postgres:
    image: postgres:16.6
    container_name: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "mendel_core"]
      interval: 60s
      retries: 2
      start_period: 10s
      timeout: 5s
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mendel_core
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mendel_network

  db-migrate:
    build:
      context: ./server
      dockerfile: ./Dockerfile
      target: dev
    entrypoint: ["go", "run", "./cmd/db-migrate/main.go" ]
    env_file:
      - ./server/.env.dev
    networks:
      - mendel_network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - dev

  mendel-server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
      target: dev
    env_file:
      - ./server/.env.dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 15s
      retries: 2
      start_period: 10s
      timeout: 2s
    expose:
      - 8080
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app
    networks:
      - mendel_network
    depends_on:
      postgres:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
    profiles:
      - dev

  mendel_web:
    image: node:20
    container_name: web
    working_dir: /app
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
    networks:
      - mendel_network
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
    command: >
      /bin/bash -c "npm install &&
        mkdir -p logs &&
        npm run dev
        wait"
    depends_on:
      postgres:
        condition: service_healthy
      mendel-server:
        condition: service_healthy
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  mendel_network:
